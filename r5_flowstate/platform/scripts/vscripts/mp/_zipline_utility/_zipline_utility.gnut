untyped


global function ZiplineUtility_Init


// Global const
    global const       ZIPLINE_EXPLOSION                        = $"p_impact_exp_small_full"
    global const       ZIPLINE_ERROR_FX                         = $"P_wpn_lasercannon_aim_short"

// Global const assets
    global const asset ZIPLINE_ARM                              = $"mdl/industrial/zipline_arm.rmdl"
    global const asset ZIPLINE_PLANEL_WALL                      = $"mdl/props/global_access_panel_button/global_access_panel_button_wall.rmdl"
    global const asset ZIPLINE_PLANEL_STAND                     = $"mdl/props/global_access_panel_button/global_access_panel_button_console_w_stand.rmdl"
    global const asset ZIPLINE_SUPPORT                          = $"mdl/industrial/security_fence_post.rmdl"

// Global const string
    global const string ZIPLINE_END_SOUND                       = "explo_spectre"
    global const string ZIPLINE_PANEL_LOCKED                    = "npe_player_fail"
    global const string ZIPLINE_START_SOUND                     = "pathfinder_zipline_expand"

// Global const string error
    global const string DEV_PRINTMESSAGE_SUBTEXT                = "Please check console log"
    global const string DEV_PRINTMESSAGE_TEXT_PLURAL            = "Ziplines are invalid"
    global const string DEV_PRINTMESSAGE_TEXT_SINGULAR          = "Zipline is invalid"
    global const string REASON_ROPE_HAVE_SAME_ORIGIN            = "The rope of the zipline [ Start / End ] has the same origin, change the origin of the end zipline or the angle"


global struct ZiplineState
{
    bool error                = false
    bool errorMinor           = false
    bool firstInit            = true
    bool ziplineIsValid       = false
    bool ziplineIsDestroyed   = true
    array < string > errorReason
    array < string > errorMinorReason
}

global struct KVFilesSettings
{
    // KV.Files vars start
    bool isVertical
    float fadeDistance              = -1.0
    float lengthScale               = 1.0
    float scale                     = 1.0
    float speedScale                = 1.0
    float startAutoDetachDistance
    float width                     = 2.0
    int detachEndOnSpawn            = 0
    int detachEndOnUse              = 0
    int dropToBottom                = 1
    int preserveVelocity            = 0
    int pushOffInDirectionX         = 1
    int ziplineVersion              = 3
    string material                 = "cable/zipline.vmt"

    // KV.Files vars end
    float endAutoDetachDistance
}

global struct ZiplineVars
{
    bool addToArray                           = false
    bool isMoving                             = false
    bool restPoint                            = false
    string ziplineName
}

global struct ZiplinePanel
{
    array < entity > newPanel
    bool panelUsableLimit   = false
    float maxTimer          = 60.0
    float minTimer          = 32.0
    int panelMaxNumberUsed  = 0
    int panelNumberUsed     = 1
}

global enum eZiplinePanelState
{
    ENABLE, // 0
    DISABLE // 1
}

global struct ZiplineUtility
{
    // Entities
    entity endEntityZiplinePoint
    entity startEntityZiplinePoint

    // Vectors entities start / end
    vector endZiplineAng
    vector endZiplinePos
    vector startZiplineAng
    vector startZiplinePos

    // Structs
    KVFilesSettings     settings
    ZiplineVars         vars
    ZiplinePanel        panels
    ZiplineState        state

    // Array && Table
    array < ZiplineUtility >            ziplineArray
    table < string, ZiplineUtility >    zipline
}
global ZiplineUtility ziplineUtility


void function ZiplineUtility_Init()
{
    ZiplinePrecache()
    AddCallback_EntitiesDidLoad( EntitiesDidLoad )

    #if ZIPLINE_DEBUG_SCRIPTS
        AddCallback_OnClientConnected( ZiplineErrorOnClientConnected )
    #endif // ZIPLINE_DEBUG_SCRIPTS
}

void function EntitiesDidLoad()
{
    #if ZIPLINE_DEBUG_SCRIPTS && DEBUG_ZIPLINE_PLATFORM
        AddCallback_OnClientConnected( CreateRandomZiplineOnClientConnected )
    #endif // ZIPLINE_DEBUG_SCRIPTS && DEBUG_ZIPLINE_PLATFORM
}
